#pragma checksum "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\Campeonato\Pases.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "87bcfdd095eb8149d04c64f8eb502847a5101228"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Campeonato_Pases), @"mvc.1.0.view", @"/Views/Campeonato/Pases.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\_ViewImports.cshtml"
using TorneosAdmin.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\_ViewImports.cshtml"
using TorneosAdmin.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"87bcfdd095eb8149d04c64f8eb502847a5101228", @"/Views/Campeonato/Pases.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d73406d7ec9995881ab04b55fd2cec498dfc6fbf", @"/Views/_ViewImports.cshtml")]
    public class Views_Campeonato_Pases : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\Campeonato\Pases.cshtml"
  
    ViewData["Title"] = "Pases";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 7 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\Campeonato\Pases.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""page-header"">
    <h1>
        Pases
        <small>
            <i class=""ace-icon fa fa-angle-double-right""></i>
            Esta sección es el movimiento de los jugadores entre los equipos.
        </small>
    </h1>
</div><!-- /.page-header -->

<div class=""row"">
    <div class=""col-xs-12"">
        <!-- PAGE CONTENT BEGINS -->
");
            WriteLiteral(@"        <div class=""form-inline"">
            <h4>
                <i class=""ace-icon fas fa-hand-point-right icon-animated-hand-pointer blue""></i>
                <a id=""btnAgregaPase"" class=""blue""> Agregar Pase </a>
            </h4>
        </div>
        <br />
        <table id=""grid-table""></table>
        <div id=""grid-pager""></div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <!-- inline scripts related to this page -->\r\n    <script type=\"text/javascript\">\r\n        // Variable Globales\r\n        var listaEquipos = JSON.parse(\'");
#nullable restore
#line 48 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\Campeonato\Pases.cshtml"
                                  Write(ViewBag.EquiposLista);

#line default
#line hidden
#nullable disable
                WriteLiteral("\'.replace(/&quot;/g, \'\"\'));\r\n        var listaJugadores = JSON.parse(\'");
#nullable restore
#line 49 "D:\AdminTorneos\Web\TorneoAdmin-App\TorneosAdmin.Web\Views\Campeonato\Pases.cshtml"
                                    Write(ViewBag.JugadoresLista);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'.replace(/&quot;/g, '""'));

        jQuery(function ($) {

            // configuración de los datepicker en español
            $.datepicker.setDefaults($.datepicker.regional[""es""]);

            // boton para agrega un nuevo dirigente.
            $(""#btnAgregaPase"").on(""click"", function () {
                addRow();
            });

            var grid_selector = ""#grid-table"";
            var pager_selector = ""#grid-pager"";
            var parent_column = $(grid_selector).closest('[class*=""col-""]');

            // Actualizar las parroquias cuando se hace cambio de provincia.
            var cambioFoto = function (id, control) {
                if (control.id == ""jugadorID"") {

                    if (id == 0) {
                        $('#fotoJugador').attr(""src"", ""../images/avatars/noimagen.png"");
                    }
                    else {
                        $.get(""../Jugadores/ObtenerFotoJugador"", { jugadorID: id }, function (data) {
                            if");
                WriteLiteral(@" (data == null)
                                $('#fotoJugador').attr(""src"", ""../images/avatars/noimagen.png"");
                            else
                                $('#fotoJugador').attr(""src"", ""data:image/png;base64,"" + data);
                        });
                        setTimeout(function () {
                            $.get(""../Jugadores/ObtenerJugadoresEquipo"", { jugadorID: id }, function (data) {
                                $('#equipoOUT').val(data);
                                $('#equipoOUT').change();
                            });
                        }, 0);
                    }
                }
                if (control.id == ""equipoIN"") {
                    if (id == 0) {
                        $('#fotoEquipoIN').attr(""src"", ""../images/avatars/noimagen.png"");
                    }
                    else {
                        $.get(""../Equipos/ObtenerFotoEquipo"", { equipoID: id }, function (data) {
                            if (data");
                WriteLiteral(@" == null)
                                $('#fotoEquipoIN').attr(""src"", ""../images/avatars/noimagen.png"");
                            else
                                $('#fotoEquipoIN').attr(""src"", ""data:image/png;base64,"" + data);
                        });
                    }
                }
                if (control.id == ""equipoOUT"") {
                    if (id == 0) {
                        $('#fotoEquipoOUT').attr(""src"", ""../images/avatars/noimagen.png"");
                    }
                    else {
                        $.get(""../Equipos/ObtenerFotoEquipo"", { equipoID: id }, function (data) {
                            if (data == null)
                                $('#fotoEquipoOUT').attr(""src"", ""../images/avatars/noimagen.png"");
                            else
                                $('#fotoEquipoOUT').attr(""src"", ""data:image/png;base64,"" + data);
                        });
                    }
                }
                return true;
  ");
                WriteLiteral(@"          };

            // Configuramos para colocar la parroquia seleccionada
            var dataInitSelect = function (elem) {
                setTimeout(function () {
                    $(elem).change();
                }, 0);
            };

            // Configuramos los eventos para cuando cambie el jugador o el equipo
            var dataEventsFoto = [
                { type: ""change"", fn: function (e) { cambioFoto($(e.target).val(), e.target); } },
                { type: ""keyup"", fn: function (e) { $(e.target).trigger(""change""); } }
            ];

            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', parent_column.width());
            });

            //resize on sidebar collapse/expand
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
     ");
                WriteLiteral(@"               //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 20);
                }
            })

            jQuery(grid_selector).jqGrid({
                url: ""/Pases/ObtenerPases"",
                datatype: 'json',
                mtype: 'GET',
                height: 400,
                colNames: ['ID', 'Fecha', 'Jugador', 'Foto', 'Equipo Sale', 'Foto', 'Equipo Entra', 'Foto', 'Valor', ''],
                colModel: [
                    { key: true, hidden: true, name: 'id', index: 'id', editable: true },
                    { name: 'fecha', index: 'fecha', editable: true, sorttype: ""date"", unformat: pickDate, formatter: dateTable },
                    { name: 'jugadorID', index: 'jugadorID', editable: true, edittype: 'select', formatter: 'select', editoptions: { value: getJugadores(), dataEvents:");
                WriteLiteral(@" dataEventsFoto } },
                    { name: 'fotoJugador', jsonmap: 'jugadorID', align: 'center', editable: true, edittype: ""custom"", editoptions: { enctype: 'multipart/form-data', custom_element: imageFormatEditJugador }, formatter: imageFormatJugador, unformat: imageUnFormat },
                    { name: 'equipoOUT', index: 'equipoOUT', editable: true, edittype: 'select', formatter: 'select', editoptions: { value: getEquipos(), dataEvents: dataEventsFoto } },
                    { name: 'fotoEquipoOUT', jsonmap: 'equipoOUT', align: 'center', editable: true, edittype: ""custom"", editoptions: { enctype: 'multipart/form-data', custom_element: imageFormatEditEquipo }, formatter: imageFormatEquipo, unformat: imageUnFormat },
                    { name: 'equipoIN', index: 'equipoIN', editable: true, edittype: 'select', formatter: 'select', editoptions: { value: getEquipos(), dataEvents: dataEventsFoto, dataInit: dataInitSelect } },
                    { name: 'fotoEquipoIN', jsonmap: 'equipoIN', align: ");
                WriteLiteral(@"'center', editable: true, edittype: ""custom"", editoptions: { enctype: 'multipart/form-data', custom_element: imageFormatEditEquipo }, formatter: imageFormatEquipo, unformat: imageUnFormat },
                    { name: 'valor', index: 'valor', editable: true, editoptions: { size: ""20"", maxlength: ""100"" } },
                    {
                        name: 'myac', width: 80, fixed: true, sortable: false, resize: false, formatter: 'actions',
                        formatoptions: {
                            key: true,
                            editbutton: true,
                            delbutton: true,
                            editformbutton: true,
                            editOptions: {
                                url: ""/Pases/Editar"",
                                mtype: 'PUT',
                                closeAfterEdit: true,
                                recreateForm: true,
                                beforeShowForm: function (form) {
                          ");
                WriteLiteral(@"          form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
                                    style_edit_form(form);

                                    form.find(""#equipoOUT"").prop(""disabled"", true)
                                    form.find(""#jugadorID"").prop(""disabled"", true);
                                },
                                errorTextFormat: FormatedorMensajesError
                            },
                            delOptions: {
                                url: ""/Pases/Eliminar"",
                                mtype: 'DELETE',
                                recreateForm: true,
                                width: 400,
                                beforeShowForm: function (form) {
                                    if (form.data('styled')) return false;

                                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
      ");
                WriteLiteral(@"                              style_delete_form(form);

                                    form.data('styled', true);

                                    form.find("".delmsg"").text(""¿Desea eliminar el pase?"");
                                    form.closest('.ui-jqdialog').find(""#dData"").text('Eliminar');
                                },
                                errorTextFormat: FormatedorMensajesError
                            }
                        }
                    }
                ],

                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: pager_selector,
                altRows: true,
                //toppager: true,

                multiselect: false,
                //multikey: ""ctrlKey"",
                //multiboxonly: true,

                loadComplete: function () {
                    var table = this;
                    setTimeout(function () {
                        updatePage");
                WriteLiteral(@"rIcons(table);
                        enableTooltips(table);
                    }, 0);
                },
                caption: ""Pase de Jugadores"",

            });

            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            function addRow() {
                // Get the currently selected row
                $(grid_selector).jqGrid('editGridRow', 'new', {
                    url: ""/Pases/Crear"",
                    mtype: 'POST',
                    modal: true,
                    closeAfterAdd: true,
                    recreateForm: true,
                    viewPagerButtons: false,
                    beforeShowForm: function (form) {
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
                        style_edit_form(form);

                        form.find(""#equipoOUT"").prop(""disabled"", true);
                        var op");
                WriteLiteral(@"tions = form.find(""#jugadorID > option"");
                        var arr = options.map(function (_, o) {
                            return {
                                t: $(o).text(),
                                v: o.value
                            };
                        }).get();
                        arr.sort(function (o1, o2) {
                            return o1.t > o2.t ? 1 : o1.t < o2.t ? -1 : 0;
                        });
                        options.each(function (i, o) {
                            o.value = arr[i].v;
                            $(o).text(arr[i].t);
                        });

                        setTimeout(function () {
                            $(""#jugadorID"").change();
                        }, 0);
                    },
                    errorTextFormat: FormatedorMensajesError
                });
            }

            $(document).one('ajaxloadstart.page', function (e) {
                $.jgrid.gridDestroy(grid_selec");
                WriteLiteral(@"tor);
                $('.ui-jqdialog').remove();
            });
        });

        function getJugadores() {
            return listaJugadores;
        }

        function getEquipos() {
            return listaEquipos;
        }
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
